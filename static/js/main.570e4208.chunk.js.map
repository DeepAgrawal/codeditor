{"version":3,"sources":["components/FilesSupport.tsx","components/CodeEditor.tsx","assets/html-icon.png","assets/css-icon.png","assets/js-icon.png","assets/copy.svg","assets/close.svg","components/FileExplorer.tsx","components/Errors.tsx","components/LiveView.tsx","hooks/useLocalStorage.tsx","assets/collapse.svg","App.tsx","index.tsx"],"names":["supportedFileTypes","name","language","value","CodeEditor","selectedFile","setHtmlCode","setCssCode","setJsCode","setErrors","htmlCode","cssCode","jsCode","file","React","useEffect","height","theme","path","defaultLanguage","defaultValue","onChange","event","undefined","onValidate","markers","filter","marker","severity","FileExplorer","setSelectedFile","shareLink","setShareLink","useState","shareOpen","setShareOpen","handleShare","a","payload","html","css","js","form","FormData","append","JSON","stringify","axios","method","url","data","headers","res","array","split","lastsegment","length","console","log","className","onClick","src","HTML","alt","CSS","JS","CLOSE","navigator","clipboard","writeText","COPY","Errors","errors","map","error","index","endLineNumber","message","LiveView","srcCode","srcDoc","title","sandbox","frameBorder","width","useLocalStorage","key","initialValue","jsonVal","localStorage","getItem","parse","val","setVal","setItem","App","setSrcCode","collapsedEditor","setCollapsedEditor","timeout","setTimeout","clearTimeout","queryParams","URLSearchParams","window","location","search","pastebinId","get","fetchCodes","Toggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAsCeA,EAlBmC,CAChD,WAAY,CACVC,KAAM,WACNC,SAAU,aACVC,MAxBQ,mBA0BV,YAAa,CACXF,KAAM,YACNC,SAAU,MACVC,MA3BS,8DA6BX,aAAc,CACZF,KAAM,aACNC,SAAU,OACVC,MA3BU,mG,OCgECC,EAxD6B,SAAC,GAStC,IARLC,EAQI,EARJA,aACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,WACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,OAEMC,EAAOb,EAAmBK,GAEX,eAAjBA,IACFQ,EAAKV,MAAQO,GAGfI,IAAMC,WAAU,WACdf,EAAmB,cAAcG,MAAQO,IACxC,CAACA,IACJI,IAAMC,WAAU,WACdf,EAAmB,aAAaG,MAAQQ,IACvC,CAACA,IACJG,IAAMC,WAAU,WACdf,EAAmB,YAAYG,MAAQS,IACtC,CAACA,IAiBJ,OACE,mCACE,cAAC,IAAD,CACEI,OAAO,OACPC,MAAM,UACNC,KAAML,EAAKZ,KACXkB,gBAAiBN,EAAKX,SACtBkB,aAAcP,EAAKV,MACnBkB,SAvBiB,SAAClB,EAA2BmB,GAC5B,eAAjBjB,QAA2CkB,IAAVpB,EACnCG,EAAYH,GACc,cAAjBE,QAA0CkB,IAAVpB,EACzCI,EAAWJ,GACe,aAAjBE,QAAyCkB,IAAVpB,GACxCK,EAAUL,IAkBRqB,WAdyB,SAACC,GAC9BA,EAAUA,EAAQC,QAAO,SAACC,GAAD,OAAYA,EAAOC,SAAW,KACvDnB,EAAUgB,S,gBCrDC,MAA0B,sCCA1B,MAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,kCCqH1BI,EAlGiC,SAAC,GAQ1C,IAPLxB,EAOI,EAPJA,aACAyB,EAMI,EANJA,gBACApB,EAKI,EALJA,SACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAmB,EAEI,EAFJA,UACAC,EACI,EADJA,aAEA,EAAkClB,IAAMmB,UAAS,GAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAW,uCAAG,oCAAAC,EAAA,sEAEVC,EAAU,CACdC,KAAM7B,EACN8B,IAAK7B,EACL8B,GAAI7B,IAEA8B,EAAO,IAAIC,UACZC,OAAO,cAAe,oCAC3BF,EAAKE,OAAO,aAAc,SAC1BF,EAAKE,OAAO,iBAAkBC,KAAKC,UAAUR,IAV7B,SAWES,IAAM,CACtBC,OAAQ,OACRC,IAAK,oBACLC,KAAMR,EACNS,QAAS,CAAE,eAAgB,yBAfb,OAWVC,EAXU,OAkBVC,EAAQD,EAAIF,KAAKI,MAAM,KACvBC,EAAcF,EAAMA,EAAMG,OAAS,GACzCxB,EAAa,8CAAgDuB,GAC7DpB,GAAa,GArBG,kDAuBhBsB,QAAQC,IAAR,MAvBgB,0DAAH,qDA2BjB,OACE,qCACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,sBAAMA,UAAU,4BAAhB,wBAEF,sBAAKA,UAAU,QAAf,UACE,sBACEC,QAAS,kBAAM9B,EAAgB,eAC/B6B,UAA4B,eAAjBtD,EAAgC,cAAgB,OAF7D,UAIE,qBAAKsD,UAAU,YAAYE,IAAKC,EAAMC,IAAI,eAC1C,sBAAMJ,UAAU,YAAhB,2BAEF,sBACEC,QAAS,kBAAM9B,EAAgB,cAC/B6B,UAA4B,cAAjBtD,EAA+B,cAAgB,OAF5D,UAIE,qBAAKsD,UAAU,YAAYE,IAAKG,EAAKD,IAAI,cACzC,sBAAMJ,UAAU,YAAhB,0BAEF,sBACEC,QAAS,kBAAM9B,EAAgB,aAC/B6B,UAA4B,aAAjBtD,EAA8B,cAAgB,OAF3D,UAIE,qBAAKsD,UAAU,YAAYE,IAAKI,EAAIF,IAAI,aACxC,sBAAMJ,UAAU,YAAhB,4BAGJ,qBAAKA,UAAU,sBAAf,SACE,wBAAQA,UAAU,YAAYC,QAASxB,EAAvC,wBAKJ,qBAAKuB,UAAWzB,EAAY,UAAY,kBACxC,sBAAKyB,UAAWzB,EAAY,QAAU,cAAtC,UACE,sBAAKyB,UAAU,eAAf,UACE,sBAAMA,UAAU,oBAAhB,wBACA,sBAAMC,QAAS,kBAAMzB,GAAa,IAAQwB,UAAU,YAApD,SACE,qBAAKE,IAAKK,EAAOH,IAAI,qBAGzB,sBAAKJ,UAAU,sBAAf,UACE,qBAAKA,UAAU,iBAAf,uBACA,sBAAKA,UAAU,gBAAf,UACE,+BAAO5B,IACP,qBACE6B,QAAS,WACPO,UAAUC,UAAUC,UAAUtC,GAAwB,KAExD8B,IAAKS,EACLP,IAAI,2BCvFHQ,EAfqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrC,OACE,sBAAKb,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAAf,+BACA,oBAAIA,UAAU,SAAd,SACGa,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACV,qBAAIhB,UAAU,QAAd,kBACQe,EAAME,cADd,MACgC,KAAOF,EAAMG,UADlBF,YCOtBG,EAbyB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzC,OACE,wBACEC,OAAQD,EACRE,MAAM,WACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNpE,OAAO,UCOEqE,EAnBS,SAACC,EAAaC,GACpC,MAAsBzE,IAAMmB,UAAS,WACnC,IAAMuD,EAAUC,aAAaC,QAAQJ,GACrC,OAAe,MAAXE,EAAwB3C,KAAK8C,MAAMH,GAEX,oBAAjBD,EACFA,IAEAA,KAPX,mBAAOK,EAAP,KAAYC,EAAZ,KAeA,OAJA/E,IAAMC,WAAU,WACd0E,aAAaK,QAAQR,EAAKzC,KAAKC,UAAU8C,MACxC,CAACN,EAAKM,IAEF,CAACA,EAAKC,IClBA,MAA0B,qCCmJ1BE,EAtHH,WACV,MAAwCjF,IAAMmB,SAAiB,cAA/D,mBAAO5B,EAAP,KAAqByB,EAArB,KACA,EAAgCuD,EAAgB,iBAPpC,kGAOZ,mBAAO3E,EAAP,KAAiBJ,EAAjB,KACA,EAA8B+E,EAAgB,gBAZnC,8DAYX,mBAAO1E,EAAP,KAAgBJ,EAAhB,KACA,EAA4B8E,EAAgB,eAdlC,mBAcV,mBAAOzE,EAAP,KAAeJ,EAAf,KACA,EAA8BM,IAAMmB,SAAiB,IAArD,mBAAO8C,EAAP,KAAgBiB,EAAhB,KACA,EAA4BlF,IAAMmB,SAAgB,IAAlD,mBAAOuC,EAAP,KAAe/D,EAAf,KACA,EAA8CK,IAAMmB,UAAkB,GAAtE,mBAAOgE,EAAP,KAAwBC,EAAxB,KACA,EAAkCpF,IAAMmB,SAAwB,MAAhE,mBAAOF,EAAP,KAAkBC,EAAlB,KAoCA,OAlCAlB,IAAMC,WAAU,WACd,IAAMoF,EAAUC,YAAW,WACH,IAAlB5B,EAAOhB,QAGXwC,EAAW,iCAAD,OAEAtF,EAFA,mCAGCC,EAHD,qCAIEC,EAJF,sCAOT,KACH,OAAO,kBAAMyF,aAAaF,MACzB,CAACzF,EAAUC,EAASC,EAAQ4D,EAAOhB,SAEtC1C,IAAMC,WAAU,YACE,uCAAG,gCAAAsB,EAAA,sEAETiE,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDC,EAAaL,EAAYM,IAAI,MAHpB,SAIG7D,IAAM6D,IAAI,QAAUD,EAAY,CAChDxD,QAAS,CAAE,eAAgB,yBALd,OAITC,EAJS,OAOf9C,EAAY8C,EAAIF,KAAKX,MACrBhC,EAAW6C,EAAIF,KAAKV,KACpBhC,EAAU4C,EAAIF,KAAKT,IATJ,kDAWfgB,QAAQC,IAAR,MAXe,0DAAH,qDAchBmD,KACC,CAACtG,EAAYD,EAAaE,IAG3B,sBAAKmD,UAAU,MAAf,UACE,cAAC,EAAD,CACEtD,aAAcA,EACdyB,gBAAiBA,EACjBpB,SAAUA,EACVC,QAASA,EACTC,OAAQA,EACRmB,UAAWA,EACXC,aAAcA,IAEhB,sBAAK2B,UAAU,aAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBACEC,QAAS,kBAAMsC,GAAoBD,IACnCtC,UAAU,qBAFZ,UAIoB,eAAjBtD,GACC,sBAAKsD,UAAU,YAAf,UACE,+BACE,qBAAKA,UAAU,iBAAiBE,IAAKC,EAAMC,IAAI,WAEjD,2CAGc,cAAjB1D,GACC,sBAAKsD,UAAU,YAAf,UACE,+BACE,qBAAKA,UAAU,iBAAiBE,IAAKG,EAAKD,IAAI,UAEhD,0CAGc,aAAjB1D,GACC,sBAAKsD,UAAU,YAAf,UACE,+BACE,qBAAKA,UAAU,iBAAiBE,IAAKI,EAAIF,IAAI,SAE/C,yCAGJ,qBAAKJ,UAAU,qBAAf,SACE,qBACEA,UAAWsC,EAAkB,YAAc,GAC3CpC,IAAKiD,EACL/C,IAAI,4BAIV,qBAAKJ,UAAWsC,EAAkB,cAAgB,kBAAlD,SACE,cAAC,EAAD,CACE5F,aAAcA,EACdC,YAAaA,EACbC,WAAYA,EACZC,UAAWA,EACXC,UAAWA,EACXC,SAAUA,EACVC,QAASA,EACTC,OAAQA,SAId,qBAAK+C,UAAWsC,EAAkB,YAAc,kBAAhD,SACqB,IAAlBzB,EAAOhB,OACN,cAAC,EAAD,CAAUuB,QAASA,IAEnB,cAAC,EAAD,CAAQP,OAAQA,aCvI5BuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.570e4208.chunk.js","sourcesContent":["const JSCode = `// Code some JS`\r\n\r\nconst CSSCode = `h1 {\r\n  color: rgb(0, 122, 204);\r\n  text-align: center;\r\n}`\r\n\r\nconst HTMLCode = `<!-- Start writing HTML (no need of html and body tags) -->\r\n<h1>\r\n    Welome !!!\r\n</h1>`\r\n\r\ninterface supportedFileTypesInt {\r\n  [key: string]: {\r\n    name: string\r\n    language: string\r\n    value: string\r\n  }\r\n}\r\n\r\nconst supportedFileTypes: supportedFileTypesInt = {\r\n  'index.js': {\r\n    name: 'index.js',\r\n    language: 'javascript',\r\n    value: JSCode\r\n  },\r\n  'index.css': {\r\n    name: 'index.css',\r\n    language: 'css',\r\n    value: CSSCode\r\n  },\r\n  'index.html': {\r\n    name: 'index.html',\r\n    language: 'html',\r\n    value: HTMLCode\r\n  }\r\n}\r\n\r\nexport default supportedFileTypes\r\n","import React from 'react'\r\nimport Editor from '@monaco-editor/react'\r\nimport supportedFileTypes from './FilesSupport'\r\n\r\ninterface CodeEditorInt {\r\n  selectedFile: string\r\n  setHtmlCode: React.Dispatch<React.SetStateAction<string>>\r\n  setCssCode: React.Dispatch<React.SetStateAction<string>>\r\n  setJsCode: React.Dispatch<React.SetStateAction<string>>\r\n  setErrors: React.Dispatch<React.SetStateAction<any[]>>\r\n  htmlCode: string\r\n  cssCode: string\r\n  jsCode: string\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorInt> = ({\r\n  selectedFile,\r\n  setHtmlCode,\r\n  setCssCode,\r\n  setJsCode,\r\n  setErrors,\r\n  htmlCode,\r\n  cssCode,\r\n  jsCode\r\n}) => {\r\n  const file = supportedFileTypes[selectedFile]\r\n\r\n  if (selectedFile === 'index.html') {\r\n    file.value = htmlCode\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    supportedFileTypes['index.html'].value = htmlCode\r\n  }, [htmlCode])\r\n  React.useEffect(() => {\r\n    supportedFileTypes['index.css'].value = cssCode\r\n  }, [cssCode])\r\n  React.useEffect(() => {\r\n    supportedFileTypes['index.js'].value = jsCode\r\n  }, [jsCode])\r\n\r\n  const handleOnChange = (value: string | undefined, event: any) => {\r\n    if (selectedFile === 'index.html' && value !== undefined) {\r\n      setHtmlCode(value)\r\n    } else if (selectedFile === 'index.css' && value !== undefined) {\r\n      setCssCode(value)\r\n    } else if (selectedFile === 'index.js' && value !== undefined) {\r\n      setJsCode(value)\r\n    }\r\n  }\r\n\r\n  const handleEditorValidation = (markers: any[]) => {\r\n    markers = markers.filter((marker) => marker.severity > 4)\r\n    setErrors(markers)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        height='45vh'\r\n        theme='vs-dark'\r\n        path={file.name}\r\n        defaultLanguage={file.language}\r\n        defaultValue={file.value}\r\n        onChange={handleOnChange}\r\n        onValidate={handleEditorValidation}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CodeEditor\r\n","export default __webpack_public_path__ + \"static/media/html-icon.b2db3a7f.png\";","export default __webpack_public_path__ + \"static/media/css-icon.d2811e59.png\";","export default __webpack_public_path__ + \"static/media/js-icon.70e1505e.png\";","export default __webpack_public_path__ + \"static/media/copy.37e02b3d.svg\";","export default __webpack_public_path__ + \"static/media/close.6ea6e49e.svg\";","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport HTML from '../assets/html-icon.png'\r\nimport CSS from '../assets/css-icon.png'\r\nimport JS from '../assets/js-icon.png'\r\nimport COPY from '../assets/copy.svg'\r\nimport CLOSE from '../assets/close.svg'\r\n\r\ninterface FileExplorerInt {\r\n  selectedFile: string\r\n  setSelectedFile: React.Dispatch<React.SetStateAction<string>>\r\n  htmlCode: string\r\n  cssCode: string\r\n  jsCode: string\r\n  shareLink: string | null\r\n  setShareLink: React.Dispatch<React.SetStateAction<string | null>>\r\n}\r\n\r\nconst FileExplorer: React.FC<FileExplorerInt> = ({\r\n  selectedFile,\r\n  setSelectedFile,\r\n  htmlCode,\r\n  cssCode,\r\n  jsCode,\r\n  shareLink,\r\n  setShareLink\r\n}) => {\r\n  const [shareOpen, setShareOpen] = React.useState(false)\r\n  const handleShare = async () => {\r\n    try {\r\n      const payload = {\r\n        html: htmlCode,\r\n        css: cssCode,\r\n        js: jsCode\r\n      }\r\n      const form = new FormData()\r\n      form.append('api_dev_key', 'K4TxBZnB7eMdaU9JSHwrFnjaEPZhY4rw')\r\n      form.append('api_option', 'paste')\r\n      form.append('api_paste_code', JSON.stringify(payload))\r\n      const res = await axios({\r\n        method: 'post',\r\n        url: '/api/api_post.php',\r\n        data: form,\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      })\r\n\r\n      const array = res.data.split('/')\r\n      const lastsegment = array[array.length - 1]\r\n      setShareLink('https://deepagrawal.github.io/codeditor?id=' + lastsegment)\r\n      setShareOpen(true)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='file-explorer'>\r\n        <div className='file-explorer-header'>\r\n          <span className='file-explorer-header-text'>EXPLORER</span>\r\n        </div>\r\n        <div className='files'>\r\n          <div\r\n            onClick={() => setSelectedFile('index.html')}\r\n            className={selectedFile === 'index.html' ? 'file active' : 'file'}\r\n          >\r\n            <img className='file-icon' src={HTML} alt='index.html' />\r\n            <span className='file-name'>index.html</span>\r\n          </div>\r\n          <div\r\n            onClick={() => setSelectedFile('index.css')}\r\n            className={selectedFile === 'index.css' ? 'file active' : 'file'}\r\n          >\r\n            <img className='file-icon' src={CSS} alt='index.css' />\r\n            <span className='file-name'>index.css</span>\r\n          </div>\r\n          <div\r\n            onClick={() => setSelectedFile('index.js')}\r\n            className={selectedFile === 'index.js' ? 'file active' : 'file'}\r\n          >\r\n            <img className='file-icon' src={JS} alt='index.js' />\r\n            <span className='file-name'>index.js</span>\r\n          </div>\r\n        </div>\r\n        <div className='share-btn-container'>\r\n          <button className='share-btn' onClick={handleShare}>\r\n            Share\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={shareOpen ? 'overlay' : 'overlay close'}></div>\r\n      <div className={shareOpen ? 'share' : 'share close'}>\r\n        <div className='share-header'>\r\n          <span className='share-header-text'>Share link</span>\r\n          <span onClick={() => setShareOpen(false)} className='close-btn'>\r\n            <img src={CLOSE} alt='Close share' />\r\n          </span>\r\n        </div>\r\n        <div className='copy-link-container'>\r\n          <div className='copy-link-text'>Copy link</div>\r\n          <div className='copy-link-box'>\r\n            <span>{shareLink}</span>\r\n            <img\r\n              onClick={() => {\r\n                navigator.clipboard.writeText(shareLink ? shareLink : '')\r\n              }}\r\n              src={COPY}\r\n              alt='COPY LINK'\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FileExplorer\r\n","import React from 'react'\r\n\r\ninterface ErrorsInt {\r\n  errors: any[]\r\n}\r\n\r\nconst Errors: React.FC<ErrorsInt> = ({ errors }) => {\r\n  return (\r\n    <div className='errors-container'>\r\n      <div className='failed-header'>Failed to compile</div>\r\n      <ul className='errors'>\r\n        {errors.map((error, index) => (\r\n          <li className='error' key={index}>\r\n            Line {error.endLineNumber} | {'  ' + error.message}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Errors\r\n","import React from 'react'\r\n\r\ninterface LiveViewInt {\r\n  srcCode: string\r\n}\r\n\r\nconst LiveView: React.FC<LiveViewInt> = ({ srcCode }) => {\r\n  return (\r\n    <iframe\r\n      srcDoc={srcCode}\r\n      title='web-view'\r\n      sandbox='allow-scripts'\r\n      frameBorder='0'\r\n      width='100%'\r\n      height='100%'\r\n    />\r\n  )\r\n}\r\n\r\nexport default LiveView\r\n","import React from 'react'\r\n\r\nconst useLocalStorage = (key: string, initialValue: any) => {\r\n  const [val, setVal] = React.useState(() => {\r\n    const jsonVal = localStorage.getItem(key)\r\n    if (jsonVal != null) return JSON.parse(jsonVal)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n  }, [key, val])\r\n\r\n  return [val, setVal]\r\n}\r\n\r\nexport default useLocalStorage\r\n","export default __webpack_public_path__ + \"static/media/collapse.1f2f7d60.svg\";","import React from 'react'\nimport './App.scss'\n\n// components\nimport CodeEditor from './components/CodeEditor'\nimport FileExplorer from './components/FileExplorer'\nimport Errors from './components/Errors'\nimport LiveView from './components/LiveView'\n\n// hook\nimport useLocalStorage from './hooks/useLocalStorage'\n\n//assets\nimport HTML from './assets/html-icon.png'\nimport CSS from './assets/css-icon.png'\nimport JS from './assets/js-icon.png'\nimport Toggle from './assets/collapse.svg'\nimport axios from 'axios'\n\nconst JSCode = `// Code some JS`\nconst CSSCode = `h1 {\n  color: rgb(0, 122, 204);\n  text-align: center;\n}`\nconst HTMLCode = `<!-- Start writing HTML (no need of html and body tags) -->\n<h1>\n    Welome !!!\n</h1>`\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = React.useState<string>('index.html')\n  const [htmlCode, setHtmlCode] = useLocalStorage('codeditor-html', HTMLCode)\n  const [cssCode, setCssCode] = useLocalStorage('codeditor-css', CSSCode)\n  const [jsCode, setJsCode] = useLocalStorage('codeditor-js', JSCode)\n  const [srcCode, setSrcCode] = React.useState<string>('')\n  const [errors, setErrors] = React.useState<any[]>([])\n  const [collapsedEditor, setCollapsedEditor] = React.useState<boolean>(false)\n  const [shareLink, setShareLink] = React.useState<string | null>(null)\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (errors.length !== 0) {\n        return\n      }\n      setSrcCode(`\n      <html>\n        <body>${htmlCode}</body>\n        <style>${cssCode}</style>\n        <script>${jsCode}</script>\n      </html>\n    `)\n    }, 1000)\n    return () => clearTimeout(timeout)\n  }, [htmlCode, cssCode, jsCode, errors.length])\n\n  React.useEffect(() => {\n    const fetchCodes = async () => {\n      try {\n        const queryParams = new URLSearchParams(window.location.search)\n        const pastebinId = queryParams.get('id')\n        const res = await axios.get('/raw/' + pastebinId, {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        })\n        setHtmlCode(res.data.html)\n        setCssCode(res.data.css)\n        setJsCode(res.data.js)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchCodes()\n  }, [setCssCode, setHtmlCode, setJsCode])\n\n  return (\n    <div className='App'>\n      <FileExplorer\n        selectedFile={selectedFile}\n        setSelectedFile={setSelectedFile}\n        htmlCode={htmlCode}\n        cssCode={cssCode}\n        jsCode={jsCode}\n        shareLink={shareLink}\n        setShareLink={setShareLink}\n      />\n      <div className='right-pane'>\n        <div className='code-editor-pane'>\n          <div\n            onClick={() => setCollapsedEditor(!collapsedEditor)}\n            className='code-editor-header'\n          >\n            {selectedFile === 'index.html' && (\n              <div className='file-name'>\n                <span>\n                  <img className='file-name-icon' src={HTML} alt='HTML' />\n                </span>\n                <span>HTML</span>\n              </div>\n            )}\n            {selectedFile === 'index.css' && (\n              <div className='file-name'>\n                <span>\n                  <img className='file-name-icon' src={CSS} alt='CSS' />\n                </span>\n                <span>CSS</span>\n              </div>\n            )}\n            {selectedFile === 'index.js' && (\n              <div className='file-name'>\n                <span>\n                  <img className='file-name-icon' src={JS} alt='JS' />\n                </span>\n                <span>JS</span>\n              </div>\n            )}\n            <div className='code-editor-toggle'>\n              <img\n                className={collapsedEditor ? 'collapsed' : ''}\n                src={Toggle}\n                alt='Code Editor Toggle'\n              />\n            </div>\n          </div>\n          <div className={collapsedEditor ? 'code-editor' : 'code-editor big'}>\n            <CodeEditor\n              selectedFile={selectedFile}\n              setHtmlCode={setHtmlCode}\n              setCssCode={setCssCode}\n              setJsCode={setJsCode}\n              setErrors={setErrors}\n              htmlCode={htmlCode}\n              cssCode={cssCode}\n              jsCode={jsCode}\n            />\n          </div>\n        </div>\n        <div className={collapsedEditor ? 'live-view' : 'live-view small'}>\n          {errors.length === 0 ? (\n            <LiveView srcCode={srcCode} />\n          ) : (\n            <Errors errors={errors} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}