{"version":3,"sources":["components/FilesSupport.tsx","components/CodeEditor.tsx","assets/html-icon.png","assets/css-icon.png","assets/js-icon.png","components/FileExplorer.tsx","components/Errors.tsx","components/LiveView.tsx","hooks/useLocalStorage.tsx","assets/collapse.svg","App.tsx","index.tsx"],"names":["supportedFileTypes","name","language","value","CodeEditor","selectedFile","setHtmlCode","setCssCode","setJsCode","setErrors","htmlCode","cssCode","jsCode","file","React","useEffect","height","theme","path","defaultLanguage","defaultValue","onChange","event","undefined","onValidate","markers","filter","marker","severity","FileExplorer","setSelectedFile","className","onClick","src","HTML","alt","CSS","JS","Errors","errors","map","error","index","endLineNumber","message","LiveView","srcCode","srcDoc","title","sandbox","frameBorder","width","useLocalStorage","key","initialValue","useState","jsonVal","localStorage","getItem","JSON","parse","val","setVal","setItem","stringify","App","setSrcCode","collapsedEditor","setCollapsedEditor","timeout","setTimeout","length","clearTimeout","Toggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acb72086.chunk.js","sourcesContent":["const JSCode = `// write some JS here`\r\n\r\nconst CSSCode = `/* write some CSS here */`\r\n\r\nconst HTMLCode = `<!-- write some HTML here -->`\r\n\r\ninterface supportedFileTypesInt {\r\n  [key: string]: {\r\n    name: string\r\n    language: string\r\n    value: string\r\n  }\r\n}\r\n\r\nconst supportedFileTypes: supportedFileTypesInt = {\r\n  'index.js': {\r\n    name: 'index.js',\r\n    language: 'javascript',\r\n    value: JSCode\r\n  },\r\n  'index.css': {\r\n    name: 'index.css',\r\n    language: 'css',\r\n    value: CSSCode\r\n  },\r\n  'index.html': {\r\n    name: 'index.html',\r\n    language: 'html',\r\n    value: HTMLCode\r\n  }\r\n}\r\n\r\nexport default supportedFileTypes\r\n","import React from 'react'\r\nimport Editor from '@monaco-editor/react'\r\nimport supportedFileTypes from './FilesSupport'\r\n\r\ninterface CodeEditorInt {\r\n  selectedFile: string\r\n  setHtmlCode: React.Dispatch<React.SetStateAction<string>>\r\n  setCssCode: React.Dispatch<React.SetStateAction<string>>\r\n  setJsCode: React.Dispatch<React.SetStateAction<string>>\r\n  setErrors: React.Dispatch<React.SetStateAction<any[]>>\r\n  htmlCode: string\r\n  cssCode: string\r\n  jsCode: string\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorInt> = ({\r\n  selectedFile,\r\n  setHtmlCode,\r\n  setCssCode,\r\n  setJsCode,\r\n  setErrors,\r\n  htmlCode,\r\n  cssCode,\r\n  jsCode\r\n}) => {\r\n  const file = supportedFileTypes[selectedFile]\r\n\r\n  if (selectedFile === 'index.html') {\r\n    file.value = htmlCode\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    supportedFileTypes['index.html'].value = htmlCode\r\n  }, [htmlCode])\r\n  React.useEffect(() => {\r\n    supportedFileTypes['index.css'].value = cssCode\r\n  }, [cssCode])\r\n  React.useEffect(() => {\r\n    supportedFileTypes['index.js'].value = jsCode\r\n  }, [jsCode])\r\n\r\n  const handleOnChange = (value: string | undefined, event: any) => {\r\n    if (selectedFile === 'index.html' && value !== undefined) {\r\n      setHtmlCode(value)\r\n    } else if (selectedFile === 'index.css' && value !== undefined) {\r\n      setCssCode(value)\r\n    } else if (selectedFile === 'index.js' && value !== undefined) {\r\n      setJsCode(value)\r\n    }\r\n  }\r\n\r\n  const handleEditorValidation = (markers: any[]) => {\r\n    markers = markers.filter((marker) => marker.severity > 4)\r\n    setErrors(markers)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        height='45vh'\r\n        theme='vs-dark'\r\n        path={file.name}\r\n        defaultLanguage={file.language}\r\n        defaultValue={file.value}\r\n        onChange={handleOnChange}\r\n        onValidate={handleEditorValidation}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CodeEditor\r\n","export default __webpack_public_path__ + \"static/media/html-icon.b2db3a7f.png\";","export default __webpack_public_path__ + \"static/media/css-icon.d2811e59.png\";","export default __webpack_public_path__ + \"static/media/js-icon.70e1505e.png\";","import React from 'react'\r\n\r\nimport HTML from '../assets/html-icon.png'\r\nimport CSS from '../assets/css-icon.png'\r\nimport JS from '../assets/js-icon.png'\r\n\r\ninterface FileExplorerInt {\r\n  selectedFile: string\r\n  setSelectedFile: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst FileExplorer: React.FC<FileExplorerInt> = ({\r\n  selectedFile,\r\n  setSelectedFile\r\n}) => {\r\n  return (\r\n    <div className='file-explorer'>\r\n      <div className='file-explorer-header'>\r\n        <span className='file-explorer-header-text'>EXPLORER</span>\r\n      </div>\r\n      <div className='files'>\r\n        <div\r\n          onClick={() => setSelectedFile('index.html')}\r\n          className={selectedFile === 'index.html' ? 'file active' : 'file'}\r\n        >\r\n          <img className='file-icon' src={HTML} alt='index.html' />\r\n          <span className='file-name'>index.html</span>\r\n        </div>\r\n        <div\r\n          onClick={() => setSelectedFile('index.css')}\r\n          className={selectedFile === 'index.css' ? 'file active' : 'file'}\r\n        >\r\n          <img className='file-icon' src={CSS} alt='index.css' />\r\n          <span className='file-name'>index.css</span>\r\n        </div>\r\n        <div\r\n          onClick={() => setSelectedFile('index.js')}\r\n          className={selectedFile === 'index.js' ? 'file active' : 'file'}\r\n        >\r\n          <img className='file-icon' src={JS} alt='index.js' />\r\n          <span className='file-name'>index.js</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileExplorer\r\n","import React from 'react'\r\n\r\ninterface ErrorsInt {\r\n  errors: any[]\r\n}\r\n\r\nconst Errors: React.FC<ErrorsInt> = ({ errors }) => {\r\n  return (\r\n    <div className='errors-container'>\r\n      <div className='failed-header'>Failed to compile</div>\r\n      <ul className='errors'>\r\n        {errors.map((error, index) => (\r\n          <li className='error' key={index}>\r\n            Line {error.endLineNumber} | {'  ' + error.message}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Errors\r\n","import React from 'react'\r\n\r\ninterface LiveViewInt {\r\n  srcCode: string\r\n}\r\n\r\nconst LiveView: React.FC<LiveViewInt> = ({ srcCode }) => {\r\n  return (\r\n    <iframe\r\n      srcDoc={srcCode}\r\n      title='web-view'\r\n      sandbox='allow-scripts'\r\n      frameBorder='0'\r\n      width='100%'\r\n      height='100%'\r\n    />\r\n  )\r\n}\r\n\r\nexport default LiveView\r\n","import React from 'react'\r\n\r\nconst useLocalStorage = (key: string, initialValue: any) => {\r\n  const [val, setVal] = React.useState(() => {\r\n    const jsonVal = localStorage.getItem(key)\r\n    if (jsonVal != null) return JSON.parse(jsonVal)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n  }, [key, val])\r\n\r\n  return [val, setVal]\r\n}\r\n\r\nexport default useLocalStorage\r\n","export default __webpack_public_path__ + \"static/media/collapse.1f2f7d60.svg\";","import React from 'react'\nimport './App.scss'\n\n// components\nimport CodeEditor from './components/CodeEditor'\nimport FileExplorer from './components/FileExplorer'\nimport Errors from './components/Errors'\nimport LiveView from './components/LiveView'\n\n// hook\nimport useLocalStorage from './hooks/useLocalStorage'\n\n//assets\nimport HTML from './assets/html-icon.png'\nimport CSS from './assets/css-icon.png'\nimport JS from './assets/js-icon.png'\nimport Toggle from './assets/collapse.svg'\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = React.useState<string>('index.html')\n  const [htmlCode, setHtmlCode] = useLocalStorage('codeditor-html', '')\n  const [cssCode, setCssCode] = useLocalStorage('codeditor-css', '')\n  const [jsCode, setJsCode] = useLocalStorage('codeditor-js', '')\n  const [srcCode, setSrcCode] = React.useState<string>('')\n  const [errors, setErrors] = React.useState<any[]>([])\n  const [collapsedEditor, setCollapsedEditor] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (errors.length !== 0) {\n        return\n      }\n      setSrcCode(`\n      <html>\n        <body>${htmlCode}</body>\n        <style>${cssCode}</style>\n        <script>${jsCode}</script>\n      </html>\n    `)\n    }, 1000)\n    return () => clearTimeout(timeout)\n  }, [htmlCode, cssCode, jsCode, errors.length])\n\n  return (\n    <div className='App'>\n      <FileExplorer\n        selectedFile={selectedFile}\n        setSelectedFile={setSelectedFile}\n      />\n      <div className='right-pane'>\n        <div className='code-editor-pane'>\n          <div\n            onClick={() => setCollapsedEditor(!collapsedEditor)}\n            className='code-editor-header'\n          >\n            {selectedFile === 'index.html' && (\n              <div className='file-name'>\n                <span>\n                  <img className='file-name-icon' src={HTML} alt='HTML' />\n                </span>\n                <span>HTML</span>\n              </div>\n            )}\n            {selectedFile === 'index.css' && (\n              <div className='file-name'>\n                <span>\n                  <img className='file-name-icon' src={CSS} alt='CSS' />\n                </span>\n                <span>CSS</span>\n              </div>\n            )}\n            {selectedFile === 'index.js' && (\n              <div className='file-name'>\n                <span>\n                  <img className='file-name-icon' src={JS} alt='JS' />\n                </span>\n                <span>JS</span>\n              </div>\n            )}\n            <div className='code-editor-toggle'>\n              <img\n                className={collapsedEditor ? 'collapsed' : ''}\n                src={Toggle}\n                alt='Code Editor Toggle'\n              />\n            </div>\n          </div>\n          <div className={collapsedEditor ? 'code-editor' : 'code-editor big'}>\n            <CodeEditor\n              selectedFile={selectedFile}\n              setHtmlCode={setHtmlCode}\n              setCssCode={setCssCode}\n              setJsCode={setJsCode}\n              setErrors={setErrors}\n              htmlCode={htmlCode}\n              cssCode={cssCode}\n              jsCode={jsCode}\n            />\n          </div>\n        </div>\n        <div className={collapsedEditor ? 'live-view' : 'live-view small'}>\n          {errors.length === 0 ? (\n            <LiveView srcCode={srcCode} />\n          ) : (\n            <Errors errors={errors} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}